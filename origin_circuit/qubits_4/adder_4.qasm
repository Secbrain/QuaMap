OPENQASM 2.0;
include "qelib1.inc";
qreg q[10];
creg reg_measure[10];
cx q[2],q[1];
cx q[2],q[0];
h q[2];
cx q[1],q[2];
u1(-pi/4) q[2];
cx q[0],q[2];
u1(pi/4) q[2];
cx q[1],q[2];
u1(pi/4) q[1];
u1(-pi/4) q[2];
cx q[0],q[2];
cx q[0],q[1];
u1(pi/4) q[0];
u1(-pi/4) q[1];
cx q[0],q[1];
x q[1];
cx q[0],q[1];
u3(pi/2,0,-3*pi/4) q[2];
cx q[4],q[3];
cx q[4],q[2];
h q[4];
cx q[3],q[4];
u1(-pi/4) q[4];
cx q[2],q[4];
u1(pi/4) q[4];
cx q[3],q[4];
u1(pi/4) q[3];
u1(-pi/4) q[4];
cx q[2],q[4];
cx q[2],q[3];
u1(pi/4) q[2];
u1(-pi/4) q[3];
cx q[2],q[3];
x q[3];
cx q[2],q[3];
u3(pi/2,0,-3*pi/4) q[4];
cx q[6],q[5];
cx q[6],q[4];
h q[6];
cx q[5],q[6];
u1(-pi/4) q[6];
cx q[4],q[6];
u1(pi/4) q[6];
cx q[5],q[6];
u1(pi/4) q[5];
u1(-pi/4) q[6];
cx q[4],q[6];
cx q[4],q[5];
u1(pi/4) q[4];
u1(-pi/4) q[5];
cx q[4],q[5];
x q[5];
cx q[4],q[5];
u3(pi/2,0,-3*pi/4) q[6];
cx q[8],q[7];
cx q[8],q[6];
h q[8];
cx q[7],q[8];
u1(-pi/4) q[8];
cx q[6],q[8];
u1(pi/4) q[8];
cx q[7],q[8];
u1(pi/4) q[7];
u1(-pi/4) q[8];
cx q[6],q[8];
cx q[6],q[7];
u1(pi/4) q[6];
u1(-pi/4) q[7];
cx q[6],q[7];
x q[7];
cx q[6],q[7];
u3(pi/2,0,-3*pi/4) q[8];
cx q[8],q[9];
h q[8];
cx q[7],q[8];
u1(-pi/4) q[8];
cx q[6],q[8];
u1(pi/4) q[8];
cx q[7],q[8];
u1(pi/4) q[7];
u1(-pi/4) q[8];
cx q[6],q[8];
cx q[6],q[7];
u1(pi/4) q[6];
u1(-pi/4) q[7];
cx q[6],q[7];
x q[7];
u3(pi/2,0,-3*pi/4) q[8];
cx q[8],q[6];
h q[6];
cx q[5],q[6];
u1(-pi/4) q[6];
cx q[4],q[6];
u1(pi/4) q[6];
cx q[5],q[6];
u1(pi/4) q[5];
u1(-pi/4) q[6];
cx q[4],q[6];
cx q[4],q[5];
u1(pi/4) q[4];
u1(-pi/4) q[5];
cx q[4],q[5];
x q[5];
u3(pi/2,0,-3*pi/4) q[6];
cx q[6],q[4];
h q[4];
cx q[3],q[4];
u1(-pi/4) q[4];
cx q[2],q[4];
u1(pi/4) q[4];
cx q[3],q[4];
u1(pi/4) q[3];
u1(-pi/4) q[4];
cx q[2],q[4];
cx q[2],q[3];
u1(pi/4) q[2];
u1(-pi/4) q[3];
cx q[2],q[3];
x q[3];
u3(pi/2,0,-3*pi/4) q[4];
cx q[4],q[2];
h q[2];
cx q[1],q[2];
u1(-pi/4) q[2];
cx q[0],q[2];
u1(pi/4) q[2];
cx q[1],q[2];
u1(pi/4) q[1];
u1(-pi/4) q[2];
cx q[0],q[2];
cx q[0],q[1];
u1(pi/4) q[0];
u1(-pi/4) q[1];
cx q[0],q[1];
x q[1];
u3(pi/2,0,-3*pi/4) q[2];
cx q[2],q[0];
cx q[2],q[1];
cx q[4],q[3];
cx q[6],q[5];
cx q[8],q[7];
barrier q[0],q[1],q[2],q[3],q[4],q[5],q[6],q[7],q[8],q[9];
measure q[0] -> reg_measure[0];
measure q[1] -> reg_measure[1];
measure q[2] -> reg_measure[2];
measure q[3] -> reg_measure[3];
measure q[4] -> reg_measure[4];
measure q[5] -> reg_measure[5];
measure q[6] -> reg_measure[6];
measure q[7] -> reg_measure[7];
measure q[8] -> reg_measure[8];
measure q[9] -> reg_measure[9];
