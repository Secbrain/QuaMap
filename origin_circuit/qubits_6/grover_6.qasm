OPENQASM 2.0;
include "qelib1.inc";
qreg q[5];
qreg flag[1];
creg meas[6];
creg reg_measure[6];
h q[0];
h q[1];
h q[2];
h q[3];
u3(pi/2,pi/32,-pi) q[4];
x flag[0];
cx q[4],flag[0];
u1(-pi/32) flag[0];
cx q[4],flag[0];
cx q[4],q[3];
u1(-pi/32) q[3];
u1(pi/32) flag[0];
cx q[3],flag[0];
u1(pi/32) flag[0];
cx q[3],flag[0];
cx q[4],q[3];
u1(pi/32) q[3];
u1(-pi/32) flag[0];
cx q[3],flag[0];
u1(-pi/32) flag[0];
cx q[3],flag[0];
cx q[3],q[2];
u1(-pi/32) q[2];
u1(pi/32) flag[0];
cx q[2],flag[0];
u1(pi/32) flag[0];
cx q[2],flag[0];
cx q[4],q[2];
u1(pi/32) q[2];
u1(-pi/32) flag[0];
cx q[2],flag[0];
u1(-pi/32) flag[0];
cx q[2],flag[0];
cx q[3],q[2];
u1(-pi/32) q[2];
u1(pi/32) flag[0];
cx q[2],flag[0];
u1(pi/32) flag[0];
cx q[2],flag[0];
cx q[4],q[2];
u1(pi/32) q[2];
u1(-pi/32) flag[0];
cx q[2],flag[0];
u1(-pi/32) flag[0];
cx q[2],flag[0];
cx q[2],q[1];
u1(-pi/32) q[1];
u1(pi/32) flag[0];
cx q[1],flag[0];
u1(pi/32) flag[0];
cx q[1],flag[0];
cx q[4],q[1];
u1(pi/32) q[1];
u1(-pi/32) flag[0];
cx q[1],flag[0];
u1(-pi/32) flag[0];
cx q[1],flag[0];
cx q[3],q[1];
u1(-pi/32) q[1];
u1(pi/32) flag[0];
cx q[1],flag[0];
u1(pi/32) flag[0];
cx q[1],flag[0];
cx q[4],q[1];
u1(pi/32) q[1];
u1(-pi/32) flag[0];
cx q[1],flag[0];
u1(-pi/32) flag[0];
cx q[1],flag[0];
cx q[2],q[1];
u1(-pi/32) q[1];
u1(pi/32) flag[0];
cx q[1],flag[0];
u1(pi/32) flag[0];
cx q[1],flag[0];
cx q[4],q[1];
u1(pi/32) q[1];
u1(-pi/32) flag[0];
cx q[1],flag[0];
u1(-pi/32) flag[0];
cx q[1],flag[0];
cx q[3],q[1];
u1(-pi/32) q[1];
u1(pi/32) flag[0];
cx q[1],flag[0];
u1(pi/32) flag[0];
cx q[1],flag[0];
cx q[4],q[1];
u1(pi/32) q[1];
u1(-pi/32) flag[0];
cx q[1],flag[0];
u1(-pi/32) flag[0];
cx q[1],flag[0];
cx q[1],q[0];
u1(-pi/32) q[0];
u1(pi/32) flag[0];
cx q[0],flag[0];
u1(pi/32) flag[0];
cx q[0],flag[0];
cx q[4],q[0];
u1(pi/32) q[0];
u1(-pi/32) flag[0];
cx q[0],flag[0];
u1(-pi/32) flag[0];
cx q[0],flag[0];
cx q[3],q[0];
u1(-pi/32) q[0];
u1(pi/32) flag[0];
cx q[0],flag[0];
u1(pi/32) flag[0];
cx q[0],flag[0];
cx q[4],q[0];
u1(pi/32) q[0];
u1(-pi/32) flag[0];
cx q[0],flag[0];
u1(-pi/32) flag[0];
cx q[0],flag[0];
cx q[2],q[0];
u1(-pi/32) q[0];
u1(pi/32) flag[0];
cx q[0],flag[0];
u1(pi/32) flag[0];
cx q[0],flag[0];
cx q[4],q[0];
u1(pi/32) q[0];
u1(-pi/32) flag[0];
cx q[0],flag[0];
u1(-pi/32) flag[0];
cx q[0],flag[0];
cx q[3],q[0];
u1(-pi/32) q[0];
u1(pi/32) flag[0];
cx q[0],flag[0];
u1(pi/32) flag[0];
cx q[0],flag[0];
cx q[4],q[0];
u1(pi/32) q[0];
u1(-pi/32) flag[0];
cx q[0],flag[0];
u1(-pi/32) flag[0];
cx q[0],flag[0];
cx q[1],q[0];
u1(-pi/32) q[0];
u3(pi/2,0,0) q[1];
u1(pi/32) flag[0];
cx q[0],flag[0];
u1(pi/32) flag[0];
cx q[0],flag[0];
cx q[4],q[0];
u1(pi/32) q[0];
u1(-pi/32) flag[0];
cx q[0],flag[0];
u1(-pi/32) flag[0];
cx q[0],flag[0];
cx q[3],q[0];
u1(-pi/32) q[0];
u1(pi/32) flag[0];
cx q[0],flag[0];
u1(pi/32) flag[0];
cx q[0],flag[0];
cx q[4],q[0];
u1(pi/32) q[0];
u1(-pi/32) flag[0];
cx q[0],flag[0];
u1(-pi/32) flag[0];
cx q[0],flag[0];
cx q[2],q[0];
u1(-pi/32) q[0];
u3(pi/2,0,0) q[2];
u1(pi/32) flag[0];
cx q[0],flag[0];
u1(pi/32) flag[0];
cx q[0],flag[0];
cx q[4],q[0];
u1(pi/32) q[0];
u1(-pi/32) flag[0];
cx q[0],flag[0];
u1(-pi/32) flag[0];
cx q[0],flag[0];
cx q[3],q[0];
u1(-pi/32) q[0];
u3(pi/2,pi/4,0) q[3];
u1(pi/32) flag[0];
cx q[0],flag[0];
u1(pi/32) flag[0];
cx q[0],flag[0];
cx q[4],q[0];
u1(pi/32) q[0];
u3(pi/2,0,0) q[4];
cx q[3],q[4];
u1(-pi/4) q[4];
cx q[3],q[4];
u3(pi/2,pi/4,-pi) q[3];
cx q[2],q[3];
u3(pi/2,0,3*pi/4) q[3];
u3(0,-pi,-3*pi/4) q[4];
u1(-pi/32) flag[0];
cx q[0],flag[0];
u1(-pi/32) flag[0];
cx q[0],flag[0];
u3(pi/2,0,0) q[0];
cx q[0],q[3];
u1(pi/4) q[3];
cx q[1],q[3];
u1(-pi/4) q[3];
cx q[0],q[3];
u1(pi/4) q[3];
cx q[1],q[3];
u3(pi/2,pi/4,3*pi/4) q[3];
cx q[2],q[3];
u3(pi/2,-pi/4,3*pi/4) q[3];
cx q[3],q[4];
u1(pi/4) q[4];
cx q[3],q[4];
u3(pi/2,pi/4,-pi) q[3];
cx q[2],q[3];
u3(pi/2,pi/4,3*pi/4) q[3];
cx q[1],q[3];
u1(-pi/4) q[3];
cx q[0],q[3];
u1(pi/4) q[3];
cx q[1],q[3];
u1(-pi/4) q[3];
cx q[0],q[3];
u1(pi/16) q[0];
u3(pi/2,pi/4,-pi) q[3];
cx q[2],q[3];
u3(0,2.2598301847951063,0.09636430539723939) q[3];
u3(0,-pi,3*pi/4) q[4];
cx q[0],q[4];
u1(-pi/16) q[4];
cx q[0],q[4];
cx q[0],q[1];
u1(-pi/16) q[1];
u3(0,-pi,-15*pi/16) q[4];
cx q[1],q[4];
u1(pi/16) q[4];
cx q[1],q[4];
cx q[0],q[1];
u1(pi/16) q[1];
u3(0,-pi,15*pi/16) q[4];
cx q[1],q[4];
u1(-pi/16) q[4];
cx q[1],q[4];
cx q[1],q[2];
u1(-pi/16) q[2];
u3(0,-pi,-15*pi/16) q[4];
cx q[2],q[4];
u1(pi/16) q[4];
cx q[2],q[4];
cx q[0],q[2];
u1(pi/16) q[2];
u3(0,-pi,15*pi/16) q[4];
cx q[2],q[4];
u1(-pi/16) q[4];
cx q[2],q[4];
cx q[1],q[2];
u3(pi/2,-pi,-pi) q[1];
u1(-pi/16) q[2];
u3(0,-pi,-15*pi/16) q[4];
cx q[2],q[4];
u1(pi/16) q[4];
cx q[2],q[4];
cx q[0],q[2];
u3(pi/2,-pi,-pi) q[0];
u1(pi/16) q[2];
u3(0,-pi,15*pi/16) q[4];
cx q[2],q[4];
u1(-pi/16) q[4];
cx q[2],q[4];
u3(pi/2,-pi,-pi) q[2];
u3(pi/2,-3.0434178831651124,-15*pi/16) q[4];
u1(pi/32) flag[0];
cx q[4],flag[0];
u1(-pi/32) flag[0];
cx q[4],flag[0];
cx q[4],q[3];
u1(-pi/32) q[3];
u1(pi/32) flag[0];
cx q[3],flag[0];
u1(pi/32) flag[0];
cx q[3],flag[0];
cx q[4],q[3];
u1(pi/32) q[3];
u1(-pi/32) flag[0];
cx q[3],flag[0];
u1(-pi/32) flag[0];
cx q[3],flag[0];
cx q[3],q[2];
u1(-pi/32) q[2];
u1(pi/32) flag[0];
cx q[2],flag[0];
u1(pi/32) flag[0];
cx q[2],flag[0];
cx q[4],q[2];
u1(pi/32) q[2];
u1(-pi/32) flag[0];
cx q[2],flag[0];
u1(-pi/32) flag[0];
cx q[2],flag[0];
cx q[3],q[2];
u1(-pi/32) q[2];
u1(pi/32) flag[0];
cx q[2],flag[0];
u1(pi/32) flag[0];
cx q[2],flag[0];
cx q[4],q[2];
u1(pi/32) q[2];
u1(-pi/32) flag[0];
cx q[2],flag[0];
u1(-pi/32) flag[0];
cx q[2],flag[0];
cx q[2],q[1];
u1(-pi/32) q[1];
u1(pi/32) flag[0];
cx q[1],flag[0];
u1(pi/32) flag[0];
cx q[1],flag[0];
cx q[4],q[1];
u1(pi/32) q[1];
u1(-pi/32) flag[0];
cx q[1],flag[0];
u1(-pi/32) flag[0];
cx q[1],flag[0];
cx q[3],q[1];
u1(-pi/32) q[1];
u1(pi/32) flag[0];
cx q[1],flag[0];
u1(pi/32) flag[0];
cx q[1],flag[0];
cx q[4],q[1];
u1(pi/32) q[1];
u1(-pi/32) flag[0];
cx q[1],flag[0];
u1(-pi/32) flag[0];
cx q[1],flag[0];
cx q[2],q[1];
u1(-pi/32) q[1];
u1(pi/32) flag[0];
cx q[1],flag[0];
u1(pi/32) flag[0];
cx q[1],flag[0];
cx q[4],q[1];
u1(pi/32) q[1];
u1(-pi/32) flag[0];
cx q[1],flag[0];
u1(-pi/32) flag[0];
cx q[1],flag[0];
cx q[3],q[1];
u1(-pi/32) q[1];
u1(pi/32) flag[0];
cx q[1],flag[0];
u1(pi/32) flag[0];
cx q[1],flag[0];
cx q[4],q[1];
u1(pi/32) q[1];
u1(-pi/32) flag[0];
cx q[1],flag[0];
u1(-pi/32) flag[0];
cx q[1],flag[0];
cx q[1],q[0];
u1(-pi/32) q[0];
u1(pi/32) flag[0];
cx q[0],flag[0];
u1(pi/32) flag[0];
cx q[0],flag[0];
cx q[4],q[0];
u1(pi/32) q[0];
u1(-pi/32) flag[0];
cx q[0],flag[0];
u1(-pi/32) flag[0];
cx q[0],flag[0];
cx q[3],q[0];
u1(-pi/32) q[0];
u1(pi/32) flag[0];
cx q[0],flag[0];
u1(pi/32) flag[0];
cx q[0],flag[0];
cx q[4],q[0];
u1(pi/32) q[0];
u1(-pi/32) flag[0];
cx q[0],flag[0];
u1(-pi/32) flag[0];
cx q[0],flag[0];
cx q[2],q[0];
u1(-pi/32) q[0];
u1(pi/32) flag[0];
cx q[0],flag[0];
u1(pi/32) flag[0];
cx q[0],flag[0];
cx q[4],q[0];
u1(pi/32) q[0];
u1(-pi/32) flag[0];
cx q[0],flag[0];
u1(-pi/32) flag[0];
cx q[0],flag[0];
cx q[3],q[0];
u1(-pi/32) q[0];
u1(pi/32) flag[0];
cx q[0],flag[0];
u1(pi/32) flag[0];
cx q[0],flag[0];
cx q[4],q[0];
u1(pi/32) q[0];
u1(-pi/32) flag[0];
cx q[0],flag[0];
u1(-pi/32) flag[0];
cx q[0],flag[0];
cx q[1],q[0];
u1(-pi/32) q[0];
u3(pi/2,0,0) q[1];
u1(pi/32) flag[0];
cx q[0],flag[0];
u1(pi/32) flag[0];
cx q[0],flag[0];
cx q[4],q[0];
u1(pi/32) q[0];
u1(-pi/32) flag[0];
cx q[0],flag[0];
u1(-pi/32) flag[0];
cx q[0],flag[0];
cx q[3],q[0];
u1(-pi/32) q[0];
u1(pi/32) flag[0];
cx q[0],flag[0];
u1(pi/32) flag[0];
cx q[0],flag[0];
cx q[4],q[0];
u1(pi/32) q[0];
u1(-pi/32) flag[0];
cx q[0],flag[0];
u1(-pi/32) flag[0];
cx q[0],flag[0];
cx q[2],q[0];
u1(-pi/32) q[0];
u3(pi/2,0,0) q[2];
u1(pi/32) flag[0];
cx q[0],flag[0];
u1(pi/32) flag[0];
cx q[0],flag[0];
cx q[4],q[0];
u1(pi/32) q[0];
u1(-pi/32) flag[0];
cx q[0],flag[0];
u1(-pi/32) flag[0];
cx q[0],flag[0];
cx q[3],q[0];
u1(-pi/32) q[0];
u3(pi/2,pi/4,0) q[3];
u1(pi/32) flag[0];
cx q[0],flag[0];
u1(pi/32) flag[0];
cx q[0],flag[0];
cx q[4],q[0];
u1(pi/32) q[0];
u3(pi/2,0,0) q[4];
cx q[3],q[4];
u1(-pi/4) q[4];
cx q[3],q[4];
u3(pi/2,pi/4,-pi) q[3];
cx q[2],q[3];
u3(pi/2,0,3*pi/4) q[3];
u3(0,-pi,-3*pi/4) q[4];
u1(-pi/32) flag[0];
cx q[0],flag[0];
u1(-pi/32) flag[0];
cx q[0],flag[0];
u3(pi/2,0,0) q[0];
cx q[0],q[3];
u1(pi/4) q[3];
cx q[1],q[3];
u1(-pi/4) q[3];
cx q[0],q[3];
u1(pi/4) q[3];
cx q[1],q[3];
u3(pi/2,pi/4,3*pi/4) q[3];
cx q[2],q[3];
u3(pi/2,-pi/4,3*pi/4) q[3];
cx q[3],q[4];
u1(pi/4) q[4];
cx q[3],q[4];
u3(pi/2,pi/4,-pi) q[3];
cx q[2],q[3];
u3(pi/2,pi/4,3*pi/4) q[3];
cx q[1],q[3];
u1(-pi/4) q[3];
cx q[0],q[3];
u1(pi/4) q[3];
cx q[1],q[3];
u1(-pi/4) q[3];
cx q[0],q[3];
u1(pi/16) q[0];
u3(pi/2,pi/4,-pi) q[3];
cx q[2],q[3];
u3(0,2.2598301847951063,0.09636430539723939) q[3];
u3(0,-pi,3*pi/4) q[4];
cx q[0],q[4];
u1(-pi/16) q[4];
cx q[0],q[4];
cx q[0],q[1];
u1(-pi/16) q[1];
u3(0,-pi,-15*pi/16) q[4];
cx q[1],q[4];
u1(pi/16) q[4];
cx q[1],q[4];
cx q[0],q[1];
u1(pi/16) q[1];
u3(0,-pi,15*pi/16) q[4];
cx q[1],q[4];
u1(-pi/16) q[4];
cx q[1],q[4];
cx q[1],q[2];
u1(-pi/16) q[2];
u3(0,-pi,-15*pi/16) q[4];
cx q[2],q[4];
u1(pi/16) q[4];
cx q[2],q[4];
cx q[0],q[2];
u1(pi/16) q[2];
u3(0,-pi,15*pi/16) q[4];
cx q[2],q[4];
u1(-pi/16) q[4];
cx q[2],q[4];
cx q[1],q[2];
u3(pi/2,-pi,-pi) q[1];
u1(-pi/16) q[2];
u3(0,-pi,-15*pi/16) q[4];
cx q[2],q[4];
u1(pi/16) q[4];
cx q[2],q[4];
cx q[0],q[2];
u3(pi/2,-pi,-pi) q[0];
u1(pi/16) q[2];
u3(0,-pi,15*pi/16) q[4];
cx q[2],q[4];
u1(-pi/16) q[4];
cx q[2],q[4];
u3(pi/2,-pi,-pi) q[2];
u3(pi/2,-3.0434178831651124,-15*pi/16) q[4];
u1(pi/32) flag[0];
cx q[4],flag[0];
u1(-pi/32) flag[0];
cx q[4],flag[0];
cx q[4],q[3];
u1(-pi/32) q[3];
u1(pi/32) flag[0];
cx q[3],flag[0];
u1(pi/32) flag[0];
cx q[3],flag[0];
cx q[4],q[3];
u1(pi/32) q[3];
u1(-pi/32) flag[0];
cx q[3],flag[0];
u1(-pi/32) flag[0];
cx q[3],flag[0];
cx q[3],q[2];
u1(-pi/32) q[2];
u1(pi/32) flag[0];
cx q[2],flag[0];
u1(pi/32) flag[0];
cx q[2],flag[0];
cx q[4],q[2];
u1(pi/32) q[2];
u1(-pi/32) flag[0];
cx q[2],flag[0];
u1(-pi/32) flag[0];
cx q[2],flag[0];
cx q[3],q[2];
u1(-pi/32) q[2];
u1(pi/32) flag[0];
cx q[2],flag[0];
u1(pi/32) flag[0];
cx q[2],flag[0];
cx q[4],q[2];
u1(pi/32) q[2];
u1(-pi/32) flag[0];
cx q[2],flag[0];
u1(-pi/32) flag[0];
cx q[2],flag[0];
cx q[2],q[1];
u1(-pi/32) q[1];
u1(pi/32) flag[0];
cx q[1],flag[0];
u1(pi/32) flag[0];
cx q[1],flag[0];
cx q[4],q[1];
u1(pi/32) q[1];
u1(-pi/32) flag[0];
cx q[1],flag[0];
u1(-pi/32) flag[0];
cx q[1],flag[0];
cx q[3],q[1];
u1(-pi/32) q[1];
u1(pi/32) flag[0];
cx q[1],flag[0];
u1(pi/32) flag[0];
cx q[1],flag[0];
cx q[4],q[1];
u1(pi/32) q[1];
u1(-pi/32) flag[0];
cx q[1],flag[0];
u1(-pi/32) flag[0];
cx q[1],flag[0];
cx q[2],q[1];
u1(-pi/32) q[1];
u1(pi/32) flag[0];
cx q[1],flag[0];
u1(pi/32) flag[0];
cx q[1],flag[0];
cx q[4],q[1];
u1(pi/32) q[1];
u1(-pi/32) flag[0];
cx q[1],flag[0];
u1(-pi/32) flag[0];
cx q[1],flag[0];
cx q[3],q[1];
u1(-pi/32) q[1];
u1(pi/32) flag[0];
cx q[1],flag[0];
u1(pi/32) flag[0];
cx q[1],flag[0];
cx q[4],q[1];
u1(pi/32) q[1];
u1(-pi/32) flag[0];
cx q[1],flag[0];
u1(-pi/32) flag[0];
cx q[1],flag[0];
cx q[1],q[0];
u1(-pi/32) q[0];
u1(pi/32) flag[0];
cx q[0],flag[0];
u1(pi/32) flag[0];
cx q[0],flag[0];
cx q[4],q[0];
u1(pi/32) q[0];
u1(-pi/32) flag[0];
cx q[0],flag[0];
u1(-pi/32) flag[0];
cx q[0],flag[0];
cx q[3],q[0];
u1(-pi/32) q[0];
u1(pi/32) flag[0];
cx q[0],flag[0];
u1(pi/32) flag[0];
cx q[0],flag[0];
cx q[4],q[0];
u1(pi/32) q[0];
u1(-pi/32) flag[0];
cx q[0],flag[0];
u1(-pi/32) flag[0];
cx q[0],flag[0];
cx q[2],q[0];
u1(-pi/32) q[0];
u1(pi/32) flag[0];
cx q[0],flag[0];
u1(pi/32) flag[0];
cx q[0],flag[0];
cx q[4],q[0];
u1(pi/32) q[0];
u1(-pi/32) flag[0];
cx q[0],flag[0];
u1(-pi/32) flag[0];
cx q[0],flag[0];
cx q[3],q[0];
u1(-pi/32) q[0];
u1(pi/32) flag[0];
cx q[0],flag[0];
u1(pi/32) flag[0];
cx q[0],flag[0];
cx q[4],q[0];
u1(pi/32) q[0];
u1(-pi/32) flag[0];
cx q[0],flag[0];
u1(-pi/32) flag[0];
cx q[0],flag[0];
cx q[1],q[0];
u1(-pi/32) q[0];
u3(pi/2,0,0) q[1];
u1(pi/32) flag[0];
cx q[0],flag[0];
u1(pi/32) flag[0];
cx q[0],flag[0];
cx q[4],q[0];
u1(pi/32) q[0];
u1(-pi/32) flag[0];
cx q[0],flag[0];
u1(-pi/32) flag[0];
cx q[0],flag[0];
cx q[3],q[0];
u1(-pi/32) q[0];
u1(pi/32) flag[0];
cx q[0],flag[0];
u1(pi/32) flag[0];
cx q[0],flag[0];
cx q[4],q[0];
u1(pi/32) q[0];
u1(-pi/32) flag[0];
cx q[0],flag[0];
u1(-pi/32) flag[0];
cx q[0],flag[0];
cx q[2],q[0];
u1(-pi/32) q[0];
u3(pi/2,0,0) q[2];
u1(pi/32) flag[0];
cx q[0],flag[0];
u1(pi/32) flag[0];
cx q[0],flag[0];
cx q[4],q[0];
u1(pi/32) q[0];
u1(-pi/32) flag[0];
cx q[0],flag[0];
u1(-pi/32) flag[0];
cx q[0],flag[0];
cx q[3],q[0];
u1(-pi/32) q[0];
u3(pi/2,pi/4,0) q[3];
u1(pi/32) flag[0];
cx q[0],flag[0];
u1(pi/32) flag[0];
cx q[0],flag[0];
cx q[4],q[0];
u1(pi/32) q[0];
u3(pi/2,0,0) q[4];
cx q[3],q[4];
u1(-pi/4) q[4];
cx q[3],q[4];
u3(pi/2,pi/4,-pi) q[3];
cx q[2],q[3];
u3(pi/2,0,3*pi/4) q[3];
u3(0,-pi,-3*pi/4) q[4];
u1(-pi/32) flag[0];
cx q[0],flag[0];
u1(-pi/32) flag[0];
cx q[0],flag[0];
u3(pi/2,0,0) q[0];
cx q[0],q[3];
u1(pi/4) q[3];
cx q[1],q[3];
u1(-pi/4) q[3];
cx q[0],q[3];
u1(pi/4) q[3];
cx q[1],q[3];
u3(pi/2,pi/4,3*pi/4) q[3];
cx q[2],q[3];
u3(pi/2,-pi/4,3*pi/4) q[3];
cx q[3],q[4];
u1(pi/4) q[4];
cx q[3],q[4];
u3(pi/2,pi/4,-pi) q[3];
cx q[2],q[3];
u3(pi/2,pi/4,3*pi/4) q[3];
cx q[1],q[3];
u1(-pi/4) q[3];
cx q[0],q[3];
u1(pi/4) q[3];
cx q[1],q[3];
u1(-pi/4) q[3];
cx q[0],q[3];
u1(pi/16) q[0];
u3(pi/2,pi/4,-pi) q[3];
cx q[2],q[3];
u3(0,2.2598301847951063,0.09636430539723939) q[3];
u3(0,-pi,3*pi/4) q[4];
cx q[0],q[4];
u1(-pi/16) q[4];
cx q[0],q[4];
cx q[0],q[1];
u1(-pi/16) q[1];
u3(0,-pi,-15*pi/16) q[4];
cx q[1],q[4];
u1(pi/16) q[4];
cx q[1],q[4];
cx q[0],q[1];
u1(pi/16) q[1];
u3(0,-pi,15*pi/16) q[4];
cx q[1],q[4];
u1(-pi/16) q[4];
cx q[1],q[4];
cx q[1],q[2];
u1(-pi/16) q[2];
u3(0,-pi,-15*pi/16) q[4];
cx q[2],q[4];
u1(pi/16) q[4];
cx q[2],q[4];
cx q[0],q[2];
u1(pi/16) q[2];
u3(0,-pi,15*pi/16) q[4];
cx q[2],q[4];
u1(-pi/16) q[4];
cx q[2],q[4];
cx q[1],q[2];
u3(pi/2,-pi,-pi) q[1];
u1(-pi/16) q[2];
u3(0,-pi,-15*pi/16) q[4];
cx q[2],q[4];
u1(pi/16) q[4];
cx q[2],q[4];
cx q[0],q[2];
u3(pi/2,-pi,-pi) q[0];
u1(pi/16) q[2];
u3(0,-pi,15*pi/16) q[4];
cx q[2],q[4];
u1(-pi/16) q[4];
cx q[2],q[4];
u3(pi/2,-pi,-pi) q[2];
u3(pi/2,-3.0434178831651124,-15*pi/16) q[4];
u1(pi/32) flag[0];
cx q[4],flag[0];
u1(-pi/32) flag[0];
cx q[4],flag[0];
cx q[4],q[3];
u1(-pi/32) q[3];
u1(pi/32) flag[0];
cx q[3],flag[0];
u1(pi/32) flag[0];
cx q[3],flag[0];
cx q[4],q[3];
u1(pi/32) q[3];
u1(-pi/32) flag[0];
cx q[3],flag[0];
u1(-pi/32) flag[0];
cx q[3],flag[0];
cx q[3],q[2];
u1(-pi/32) q[2];
u1(pi/32) flag[0];
cx q[2],flag[0];
u1(pi/32) flag[0];
cx q[2],flag[0];
cx q[4],q[2];
u1(pi/32) q[2];
u1(-pi/32) flag[0];
cx q[2],flag[0];
u1(-pi/32) flag[0];
cx q[2],flag[0];
cx q[3],q[2];
u1(-pi/32) q[2];
u1(pi/32) flag[0];
cx q[2],flag[0];
u1(pi/32) flag[0];
cx q[2],flag[0];
cx q[4],q[2];
u1(pi/32) q[2];
u1(-pi/32) flag[0];
cx q[2],flag[0];
u1(-pi/32) flag[0];
cx q[2],flag[0];
cx q[2],q[1];
u1(-pi/32) q[1];
u1(pi/32) flag[0];
cx q[1],flag[0];
u1(pi/32) flag[0];
cx q[1],flag[0];
cx q[4],q[1];
u1(pi/32) q[1];
u1(-pi/32) flag[0];
cx q[1],flag[0];
u1(-pi/32) flag[0];
cx q[1],flag[0];
cx q[3],q[1];
u1(-pi/32) q[1];
u1(pi/32) flag[0];
cx q[1],flag[0];
u1(pi/32) flag[0];
cx q[1],flag[0];
cx q[4],q[1];
u1(pi/32) q[1];
u1(-pi/32) flag[0];
cx q[1],flag[0];
u1(-pi/32) flag[0];
cx q[1],flag[0];
cx q[2],q[1];
u1(-pi/32) q[1];
u1(pi/32) flag[0];
cx q[1],flag[0];
u1(pi/32) flag[0];
cx q[1],flag[0];
cx q[4],q[1];
u1(pi/32) q[1];
u1(-pi/32) flag[0];
cx q[1],flag[0];
u1(-pi/32) flag[0];
cx q[1],flag[0];
cx q[3],q[1];
u1(-pi/32) q[1];
u1(pi/32) flag[0];
cx q[1],flag[0];
u1(pi/32) flag[0];
cx q[1],flag[0];
cx q[4],q[1];
u1(pi/32) q[1];
u1(-pi/32) flag[0];
cx q[1],flag[0];
u1(-pi/32) flag[0];
cx q[1],flag[0];
cx q[1],q[0];
u1(-pi/32) q[0];
u1(pi/32) flag[0];
cx q[0],flag[0];
u1(pi/32) flag[0];
cx q[0],flag[0];
cx q[4],q[0];
u1(pi/32) q[0];
u1(-pi/32) flag[0];
cx q[0],flag[0];
u1(-pi/32) flag[0];
cx q[0],flag[0];
cx q[3],q[0];
u1(-pi/32) q[0];
u1(pi/32) flag[0];
cx q[0],flag[0];
u1(pi/32) flag[0];
cx q[0],flag[0];
cx q[4],q[0];
u1(pi/32) q[0];
u1(-pi/32) flag[0];
cx q[0],flag[0];
u1(-pi/32) flag[0];
cx q[0],flag[0];
cx q[2],q[0];
u1(-pi/32) q[0];
u1(pi/32) flag[0];
cx q[0],flag[0];
u1(pi/32) flag[0];
cx q[0],flag[0];
cx q[4],q[0];
u1(pi/32) q[0];
u1(-pi/32) flag[0];
cx q[0],flag[0];
u1(-pi/32) flag[0];
cx q[0],flag[0];
cx q[3],q[0];
u1(-pi/32) q[0];
u1(pi/32) flag[0];
cx q[0],flag[0];
u1(pi/32) flag[0];
cx q[0],flag[0];
cx q[4],q[0];
u1(pi/32) q[0];
u1(-pi/32) flag[0];
cx q[0],flag[0];
u1(-pi/32) flag[0];
cx q[0],flag[0];
cx q[1],q[0];
u1(-pi/32) q[0];
u3(pi/2,0,0) q[1];
u1(pi/32) flag[0];
cx q[0],flag[0];
u1(pi/32) flag[0];
cx q[0],flag[0];
cx q[4],q[0];
u1(pi/32) q[0];
u1(-pi/32) flag[0];
cx q[0],flag[0];
u1(-pi/32) flag[0];
cx q[0],flag[0];
cx q[3],q[0];
u1(-pi/32) q[0];
u1(pi/32) flag[0];
cx q[0],flag[0];
u1(pi/32) flag[0];
cx q[0],flag[0];
cx q[4],q[0];
u1(pi/32) q[0];
u1(-pi/32) flag[0];
cx q[0],flag[0];
u1(-pi/32) flag[0];
cx q[0],flag[0];
cx q[2],q[0];
u1(-pi/32) q[0];
u3(pi/2,0,0) q[2];
u1(pi/32) flag[0];
cx q[0],flag[0];
u1(pi/32) flag[0];
cx q[0],flag[0];
cx q[4],q[0];
u1(pi/32) q[0];
u1(-pi/32) flag[0];
cx q[0],flag[0];
u1(-pi/32) flag[0];
cx q[0],flag[0];
cx q[3],q[0];
u1(-pi/32) q[0];
u3(pi/2,pi/4,0) q[3];
u1(pi/32) flag[0];
cx q[0],flag[0];
u1(pi/32) flag[0];
cx q[0],flag[0];
cx q[4],q[0];
u1(pi/32) q[0];
u3(pi/2,0,0) q[4];
cx q[3],q[4];
u1(-pi/4) q[4];
cx q[3],q[4];
u3(pi/2,pi/4,-pi) q[3];
cx q[2],q[3];
u3(pi/2,0,3*pi/4) q[3];
u3(0,-pi,-3*pi/4) q[4];
u1(-pi/32) flag[0];
cx q[0],flag[0];
u1(-pi/32) flag[0];
cx q[0],flag[0];
u3(pi/2,0,0) q[0];
cx q[0],q[3];
u1(pi/4) q[3];
cx q[1],q[3];
u1(-pi/4) q[3];
cx q[0],q[3];
u1(pi/4) q[3];
cx q[1],q[3];
u3(pi/2,pi/4,3*pi/4) q[3];
cx q[2],q[3];
u3(pi/2,-pi/4,3*pi/4) q[3];
cx q[3],q[4];
u1(pi/4) q[4];
cx q[3],q[4];
u3(pi/2,pi/4,-pi) q[3];
cx q[2],q[3];
u3(pi/2,pi/4,3*pi/4) q[3];
cx q[1],q[3];
u1(-pi/4) q[3];
cx q[0],q[3];
u1(pi/4) q[3];
cx q[1],q[3];
u1(-pi/4) q[3];
cx q[0],q[3];
u1(pi/16) q[0];
u3(pi/2,pi/4,-pi) q[3];
cx q[2],q[3];
u3(0,2.2598301847951063,0.09636430539723939) q[3];
u3(0,-pi,3*pi/4) q[4];
cx q[0],q[4];
u1(-pi/16) q[4];
cx q[0],q[4];
cx q[0],q[1];
u1(-pi/16) q[1];
u3(0,-pi,-15*pi/16) q[4];
cx q[1],q[4];
u1(pi/16) q[4];
cx q[1],q[4];
cx q[0],q[1];
u1(pi/16) q[1];
u3(0,-pi,15*pi/16) q[4];
cx q[1],q[4];
u1(-pi/16) q[4];
cx q[1],q[4];
cx q[1],q[2];
u1(-pi/16) q[2];
u3(0,-pi,-15*pi/16) q[4];
cx q[2],q[4];
u1(pi/16) q[4];
cx q[2],q[4];
cx q[0],q[2];
u1(pi/16) q[2];
u3(0,-pi,15*pi/16) q[4];
cx q[2],q[4];
u1(-pi/16) q[4];
cx q[2],q[4];
cx q[1],q[2];
u3(pi/2,-pi,-pi) q[1];
u1(-pi/16) q[2];
u3(0,-pi,-15*pi/16) q[4];
cx q[2],q[4];
u1(pi/16) q[4];
cx q[2],q[4];
cx q[0],q[2];
u3(pi/2,-pi,-pi) q[0];
u1(pi/16) q[2];
u3(0,-pi,15*pi/16) q[4];
cx q[2],q[4];
u1(-pi/16) q[4];
cx q[2],q[4];
u3(pi/2,-pi,-pi) q[2];
u3(pi/2,-pi,-15*pi/16) q[4];
u1(pi/32) flag[0];
barrier q[0],q[1],q[2],q[3],q[4],flag[0];
measure q[0] -> meas[0];
measure q[1] -> meas[1];
measure q[2] -> meas[2];
measure q[3] -> meas[3];
measure q[4] -> meas[4];
measure flag[0] -> meas[5];
barrier q[0],q[1],q[2],q[3],q[4],flag[0];
measure q[0] -> reg_measure[0];
measure q[1] -> reg_measure[1];
measure q[2] -> reg_measure[2];
measure q[3] -> reg_measure[3];
measure q[4] -> reg_measure[4];
measure flag[0] -> reg_measure[5];
